Q1: In Java, string is basically an object that represents sequence of char values. An array of characters works same as Java string.
    For example:
    char[] ch={'j','a','v','a','t','p','o','i','n','t'};  
    String s=new String(ch);   

Q3: There are two ways to create a String object:

By string literal : Java String literal is created by using double quotes.
For Example: String s=“Welcome”;  
By new keyword : Java String is created by using a keyword “new”.

Q4: The String constant pool is a special memory area. When we declare a String literal, the JVM creates the object in the pool and stores its reference on the stack. Before creating each String object in memory, the JVM performs some steps to decrease the memory overhead.

Q5: Mutable String--> The mutable objects are objects whose value can be changed after initialization. We can change the object's values, such as field and states, after the object is created. For example, Java.util.Date, StringBuilder, StringBuffer, etc.
    Immutable String--> The immutable objects are objects whose value can not be changed after initialization. We can not change anything once the object is created. For example, primitive objects such as int, long, float, double, all legacy classes, Wrapper class, String class, etc.

Q6: String constant pool belongs to the permanent generation area of Heap memory.
