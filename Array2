Q2: No, you cannot use a negative integer as size, the size of an array represents the number of elements in it.

Q3: The reference types in Java are stored in heap area. Since arrays are reference types, these are also stored in heap area.

Q4: The disadvantages are :
    -->Fixed size: Arrays have a fixed size that is determined at the time of creation. This means that if the size of the array needs to be increased, a new array must be created and the data must be copied from the old array to the new array, which can be time-consuming and memory-intensive.
    -->Memory allocation issues: Allocating a large array can be problematic, particularly in systems with limited memory. If the size of the array is too large, the system may run out of memory, which can cause the program to crash.
    -->Insertion and deletion issues: Inserting or deleting an element from an array can be inefficient and time-consuming because all the elements after the insertion or deletion point must be shifted to accommodate the change.

Q5: An array in Java without any name is known as an anonymous array. It is an array just for creating and using instantly.
    Example --> new int[] { 1254, 5452, 5743, 9984}; 

Q6: You can traverse through an array using for loop or forEach loop.
    Using the for loop − Instead on printing element by element, you can iterate the index using for loop starting from 0 to length of the array (ArrayName.length) and access elements at each index.
    Using the for each loop − Since JDK 1.5, Java introduced a new for loop known as foreach loop or enhanced for loop, which enables you to traverse the complete array sequentially without using an index variable. You can traverse through the array with less effort using this.

Q7: The key difference between Java’s length variable and Java’s length() method is that the Java length variable describes the size of an array, while Java’s length() method tells you how many characters a text String contains.
